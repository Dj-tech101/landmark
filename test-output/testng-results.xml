<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-01-05T14:26:35 IST" name="Suite" finished-at="2024-01-05T14:36:36 IST" duration-ms="601203">
    <groups>
    </groups>
    <test started-at="2024-01-05T14:26:35 IST" name="smokeTestCases" finished-at="2024-01-05T14:27:06 IST" duration-ms="31279">
      <class name="Demo_landmark_SaAdminTestCases.DemoSaAdminSearchFunctionality">
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:Demo_landmark_SaAdminTestCases.DemoSaAdminSearchFunctionality@4c402120]" started-at="2024-01-05T14:26:35 IST" name="setup" finished-at="2024-01-05T14:26:44 IST" duration-ms="8846" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@3b59d246]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="SearchEventNameFunction()[pri:0, instance:Demo_landmark_SaAdminTestCases.DemoSaAdminSearchFunctionality@4c402120]" started-at="2024-01-05T14:26:44 IST" name="SearchEventNameFunction" finished-at="2024-01-05T14:27:05 IST" duration-ms="21715" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at Demo_landmark_SaAdminTestCases.DemoSaAdminSearchFunctionality.SearchEventNameFunction(DemoSaAdminSearchFunctionality.java:71)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchEventNameFunction -->
        <test-method is-config="true" signature="checkStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:Demo_landmark_SaAdminTestCases.DemoSaAdminSearchFunctionality@4c402120]" started-at="2024-01-05T14:27:05 IST" name="checkStatus" finished-at="2024-01-05T14:27:06 IST" duration-ms="431" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Demo_landmark_SaAdminTestCases.DemoSaAdminSearchFunctionality.SearchEventNameFunction() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SearchEventNameFunction status=FAILURE method=DemoSaAdminSearchFunctionality.SearchEventNameFunction()[pri:0, instance:Demo_landmark_SaAdminTestCases.DemoSaAdminSearchFunctionality@4c402120] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatus -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Demo_landmark_SaAdminTestCases.DemoSaAdminSearchFunctionality@4c402120]" started-at="2024-01-05T14:27:06 IST" name="tearDown" finished-at="2024-01-05T14:27:06 IST" duration-ms="235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Demo_landmark_SaAdminTestCases.DemoSaAdminSearchFunctionality -->
    </test> <!-- smokeTestCases -->
    <test started-at="2024-01-05T14:27:06 IST" name="editTest" finished-at="2024-01-05T14:36:36 IST" duration-ms="569892">
      <class name="Demo_landmark_Smoke_CopyTest.Smoke_Create_Event_Video_editTest">
        <test-method is-config="true" signature="initializedExtendReport()[pri:0, instance:Demo_landmark_Smoke_CopyTest.Smoke_Create_Event_Video_editTest@7a8c8dcf]" started-at="2024-01-05T14:26:34 IST" name="initializedExtendReport" finished-at="2024-01-05T14:26:35 IST" duration-ms="293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializedExtendReport -->
        <test-method is-config="true" signature="setup(org.testng.ITestContext)[pri:0, instance:Demo_landmark_Smoke_CopyTest.Smoke_Create_Event_Video_editTest@7a8c8dcf]" started-at="2024-01-05T14:27:06 IST" name="setup" finished-at="2024-01-05T14:27:22 IST" duration-ms="15713" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@3fbf4614]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Create_Event_Video_EditTest()[pri:0, instance:Demo_landmark_Smoke_CopyTest.Smoke_Create_Event_Video_editTest@7a8c8dcf]" started-at="2024-01-05T14:27:22 IST" name="Create_Event_Video_EditTest" finished-at="2024-01-05T14:28:44 IST" duration-ms="82128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Create_Event_Video_EditTest -->
        <test-method is-config="true" signature="checkStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:Demo_landmark_Smoke_CopyTest.Smoke_Create_Event_Video_editTest@7a8c8dcf]" started-at="2024-01-05T14:28:44 IST" name="checkStatus" finished-at="2024-01-05T14:28:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Demo_landmark_Smoke_CopyTest.Smoke_Create_Event_Video_editTest.Create_Event_Video_EditTest() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=Create_Event_Video_EditTest status=SUCCESS method=Smoke_Create_Event_Video_editTest.Create_Event_Video_EditTest()[pri:0, instance:Demo_landmark_Smoke_CopyTest.Smoke_Create_Event_Video_editTest@7a8c8dcf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatus -->
        <test-method signature="validateCopyFunction()[pri:0, instance:Demo_landmark_Smoke_CopyTest.Smoke_Create_Event_Video_editTest@7a8c8dcf]" started-at="2024-01-05T14:28:44 IST" name="validateCopyFunction" finished-at="2024-01-05T14:36:36 IST" depends-on-methods="Demo_landmark_Smoke_CopyTest.Smoke_Create_Event_Video_editTest.Create_Event_Video_EditTest" duration-ms="471874" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCopyFunction -->
        <test-method is-config="true" signature="checkStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:Demo_landmark_Smoke_CopyTest.Smoke_Create_Event_Video_editTest@7a8c8dcf]" started-at="2024-01-05T14:36:36 IST" name="checkStatus" finished-at="2024-01-05T14:36:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Demo_landmark_Smoke_CopyTest.Smoke_Create_Event_Video_editTest.validateCopyFunction() throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=validateCopyFunction status=SUCCESS method=Smoke_Create_Event_Video_editTest.validateCopyFunction()[pri:0, instance:Demo_landmark_Smoke_CopyTest.Smoke_Create_Event_Video_editTest@7a8c8dcf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatus -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Demo_landmark_Smoke_CopyTest.Smoke_Create_Event_Video_editTest@7a8c8dcf]" started-at="2024-01-05T14:36:36 IST" name="tearDown" finished-at="2024-01-05T14:36:36 IST" duration-ms="155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="generateExtendReport()[pri:0, instance:Demo_landmark_Smoke_CopyTest.Smoke_Create_Event_Video_editTest@7a8c8dcf]" started-at="2024-01-05T14:36:36 IST" name="generateExtendReport" finished-at="2024-01-05T14:36:36 IST" duration-ms="233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateExtendReport -->
      </class> <!-- Demo_landmark_Smoke_CopyTest.Smoke_Create_Event_Video_editTest -->
    </test> <!-- editTest -->
  </suite> <!-- Suite -->
</testng-results>
